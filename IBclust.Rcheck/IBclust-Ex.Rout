
R version 4.4.2 (2024-10-31 ucrt) -- "Pile of Leaves"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "IBclust"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('IBclust')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("AIBcat")
> ### * AIBcat
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: AIBcat
> ### Title: Cluster Categorical Data Using the Agglomerative Information
> ###   Bottleneck Algorithm
> ### Aliases: AIBcat
> ### Keywords: clustering
> 
> ### ** Examples
> 
> # Simulated categorical data
> set.seed(123)
> X <- data.frame(
+   Var1 = as.factor(sample(letters[1:3], 200, replace = TRUE)),  # Nominal variable
+   Var2 = as.factor(sample(letters[4:6], 200, replace = TRUE)),  # Nominal variable
+   Var3 = factor(sample(c("low", "medium", "high"), 200, replace = TRUE),
+                 levels = c("low", "medium", "high"), ordered = TRUE)  # Ordinal variable
+ )
> 
> # Run AIBcat with automatic lambda selection 
> result <- AIBcat(X = X, lambda = -1)
> 
> # Print clustering results
> plot(result$dendrogram, xlab = "", sub = "")  # Plot dendrogram
> 
> 
> 
> cleanEx()
> nameEx("AIBcont")
> ### * AIBcont
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: AIBcont
> ### Title: Cluster Continuous Data Using the Agglomerative Information
> ###   Bottleneck Algorithm
> ### Aliases: AIBcont
> ### Keywords: clustering
> 
> ### ** Examples
> 
> # Generate simulated continuous data
> set.seed(123)
> X <- matrix(rnorm(1000), ncol = 5)  # 200 observations, 5 features
> 
> # Run AIBcont with automatic bandwidth selection 
> result <- AIBcont(X = X, s = -1, scale = TRUE)
> 
> # Print clustering results
> plot(result$dendrogram, xlab = "", sub = "")  # Plot dendrogram
> 
> 
> 
> cleanEx()
> nameEx("AIBmix")
> ### * AIBmix
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: AIBmix
> ### Title: Agglomerative Information Bottleneck Clustering for Mixed-Type
> ###   Data
> ### Aliases: AIBmix
> ### Keywords: clustering
> 
> ### ** Examples
> 
> # Example dataset with categorical, ordinal, and continuous variables
> set.seed(123)
> data <- data.frame(
+   cat_var = factor(sample(letters[1:3], 100, replace = TRUE)),      # Nominal categorical variable
+   ord_var = factor(sample(c("low", "medium", "high"), 100, replace = TRUE),
+                    levels = c("low", "medium", "high"),
+                    ordered = TRUE),                                # Ordinal variable
+   cont_var1 = rnorm(100),                                          # Continuous variable 1
+   cont_var2 = runif(100)                                           # Continuous variable 2
+ )
> 
> # Perform Mixed-Type Hierarchical Clustering with Agglomerative IB
> result <- AIBmix(X = data, catcols = 1:2, contcols = 3:4, lambda = -1, s = -1, scale = TRUE)
> 
> # Print clustering results
> plot(result$dendrogram, xlab = "", sub = "")  # Plot dendrogram
> 
> 
> 
> cleanEx()
> nameEx("DIBcat")
> ### * DIBcat
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: DIBcat
> ### Title: Cluster Categorical Data Using the Deterministic Information
> ###   Bottleneck Algorithm
> ### Aliases: DIBcat
> ### Keywords: clustering
> 
> ### ** Examples
> 
> # Simulated categorical data
> set.seed(123)
> X <- data.frame(
+   Var1 = as.factor(sample(letters[1:3], 200, replace = TRUE)),  # Nominal variable
+   Var2 = as.factor(sample(letters[4:6], 200, replace = TRUE)),  # Nominal variable
+   Var3 = factor(sample(c("low", "medium", "high"), 200, replace = TRUE),
+                 levels = c("low", "medium", "high"), ordered = TRUE)  # Ordinal variable
+ )
> 
> # Run DIBcat with automatic lambda selection and multiple initializations
> result <- DIBcat(X = X, ncl = 3, lambda = -1, nstart = 10)
  |                                                                              |                                                                      |   0%  |                                                                              |=======                                                               |  10%  |                                                                              |==============                                                        |  20%  |                                                                              |=====================                                                 |  30%  |                                                                              |============================                                          |  40%  |                                                                              |===================================                                   |  50%  |                                                                              |==========================================                            |  60%  |                                                                              |=================================================                     |  70%  |                                                                              |========================================================              |  80%  |                                                                              |===============================================================       |  90%  |                                                                              |======================================================================| 100%
> 
> # Print clustering results
> print(result$Cluster)       # Cluster assignments
  [1] 2 2 2 3 2 3 3 3 2 1 3 3 1 3 2 1 2 2 1 1 1 1 2 3 2 3 1 3 2 3 1 2 2 1 2 3 1
 [38] 2 1 1 3 2 2 1 2 1 2 3 1 3 1 1 2 1 3 1 1 2 1 3 1 2 1 2 3 2 3 3 2 3 3 2 2 1
 [75] 3 3 1 3 1 1 3 2 2 1 3 1 3 1 2 2 3 2 1 3 3 2 3 1 2 2 2 3 3 2 1 1 2 3 3 3 3
[112] 3 3 2 3 1 3 3 3 2 3 2 3 2 1 2 2 2 1 2 2 3 3 3 2 2 2 3 1 3 1 2 2 3 1 2 1 2
[149] 3 3 1 2 3 1 2 2 2 1 3 3 1 3 2 2 1 3 1 3 2 2 1 2 3 1 1 3 2 1 3 3 1 3 1 1 3
[186] 1 2 1 1 3 1 3 1 1 1 2 2 3 1 3
> print(result$Entropy)       # Final entropy
[1] 1.583624
> print(result$MutualInfo)    # Mutual information
[1] 0.08759985
> 
> 
> 
> cleanEx()
> nameEx("DIBcont")
> ### * DIBcont
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: DIBcont
> ### Title: Cluster Continuous Data Using the Deterministic Information
> ###   Bottleneck Algorithm
> ### Aliases: DIBcont
> ### Keywords: clustering
> 
> ### ** Examples
> 
> # Generate simulated continuous data
> set.seed(123)
> X <- matrix(rnorm(200), ncol = 5)  # 200 observations, 5 features
> 
> # Run DIBcont with automatic bandwidth selection and multiple initializations
> result <- DIBcont(X = X, ncl = 3, s = -1, nstart = 10)
  |                                                                              |                                                                      |   0%  |                                                                              |=======                                                               |  10%  |                                                                              |==============                                                        |  20%  |                                                                              |=====================                                                 |  30%  |                                                                              |============================                                          |  40%  |                                                                              |===================================                                   |  50%  |                                                                              |==========================================                            |  60%  |                                                                              |=================================================                     |  70%  |                                                                              |========================================================              |  80%  |                                                                              |===============================================================       |  90%  |                                                                              |======================================================================| 100%
> 
> # Print clustering results
> print(result$Cluster)       # Cluster assignments
 [1] 3 2 2 3 1 2 3 2 3 3 1 1 2 3 2 1 2 3 1 2 1 3 2 2 2 2 3 1 1 3 1 2 1 2 2 3 1 2
[39] 1 2
> print(result$Entropy)       # Final entropy
[1] 1.557924
> print(result$MutualInfo)    # Mutual information
[1] 0.01232257
> 
> 
> 
> cleanEx()
> nameEx("DIBmix")
> ### * DIBmix
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: DIBmix
> ### Title: Deterministic Information Bottleneck Clustering for Mixed-Type
> ###   Data
> ### Aliases: DIBmix
> ### Keywords: clustering
> 
> ### ** Examples
> 
> # Example 1: Basic Mixed-Type Clustering
> set.seed(123)
> 
> # Create a more realistic dataset with mixed variable types
> data <- data.frame(
+   # Categorical variables
+   education = factor(sample(c("High School", "Bachelor", "Master", "PhD"), 150, 
+                            replace = TRUE, prob = c(0.4, 0.3, 0.2, 0.1))),
+   employment = factor(sample(c("Full-time", "Part-time", "Unemployed"), 150, 
+                             replace = TRUE, prob = c(0.6, 0.25, 0.15))),
+   
+   # Ordinal variable
+   satisfaction = factor(sample(c("Low", "Medium", "High"), 150, replace = TRUE),
+                        levels = c("Low", "Medium", "High"), ordered = TRUE),
+   
+   # Continuous variables  
+   income = rlnorm(150, meanlog = 10, sdlog = 0.5),  # Log-normal income
+   age = rnorm(150, mean = 35, sd = 10),             # Normally distributed age
+   experience = rpois(150, lambda = 8)               # Years of experience
+ )
> 
> # Perform Mixed-Type Clustering
> result <- DIBmix(X = data, ncl = 3, 
+                 catcols = c(1, 2, 3),    # education, employment, satisfaction
+                 contcols = c(4, 5, 6),   # income, age, experience
+                 nstart = 50)
  |                                                                              |                                                                      |   0%  |                                                                              |=                                                                     |   2%  |                                                                              |===                                                                   |   4%  |                                                                              |====                                                                  |   6%  |                                                                              |======                                                                |   8%  |                                                                              |=======                                                               |  10%  |                                                                              |========                                                              |  12%  |                                                                              |==========                                                            |  14%  |                                                                              |===========                                                           |  16%  |                                                                              |=============                                                         |  18%  |                                                                              |==============                                                        |  20%  |                                                                              |===============                                                       |  22%  |                                                                              |=================                                                     |  24%  |                                                                              |==================                                                    |  26%  |                                                                              |====================                                                  |  28%  |                                                                              |=====================                                                 |  30%  |                                                                              |======================                                                |  32%  |                                                                              |========================                                              |  34%  |                                                                              |=========================                                             |  36%  |                                                                              |===========================                                           |  38%  |                                                                              |============================                                          |  40%  |                                                                              |=============================                                         |  42%  |                                                                              |===============================                                       |  44%  |                                                                              |================================                                      |  46%  |                                                                              |==================================                                    |  48%  |                                                                              |===================================                                   |  50%  |                                                                              |====================================                                  |  52%  |                                                                              |======================================                                |  54%  |                                                                              |=======================================                               |  56%  |                                                                              |=========================================                             |  58%  |                                                                              |==========================================                            |  60%  |                                                                              |===========================================                           |  62%  |                                                                              |=============================================                         |  64%  |                                                                              |==============================================                        |  66%  |                                                                              |================================================                      |  68%  |                                                                              |=================================================                     |  70%  |                                                                              |==================================================                    |  72%  |                                                                              |====================================================                  |  74%  |                                                                              |=====================================================                 |  76%  |                                                                              |=======================================================               |  78%  |                                                                              |========================================================              |  80%  |                                                                              |=========================================================             |  82%  |                                                                              |===========================================================           |  84%  |                                                                              |============================================================          |  86%  |                                                                              |==============================================================        |  88%  |                                                                              |===============================================================       |  90%  |                                                                              |================================================================      |  92%  |                                                                              |==================================================================    |  94%  |                                                                              |===================================================================   |  96%  |                                                                              |===================================================================== |  98%  |                                                                              |======================================================================| 100%
> 
> # View results
> print(paste("Number of clusters found:", length(unique(result$Cluster))))
[1] "Number of clusters found: 3"
> print(paste("Mutual Information:", round(result$MutualInfo, 3)))
[1] "Mutual Information: 0.338"
> table(result$Cluster)

 1  2  3 
36 50 64 
> 
> # Example 2: Comparing cat_first parameter
> # When categorical variables are more informative
> result_cat_first <- DIBmix(X = data, ncl = 3,
+                           catcols = c(1, 2, 3), 
+                           contcols = c(4, 5, 6),
+                           cat_first = TRUE,  # Prioritize categorical variables
+                           nstart = 50)
  |                                                                              |                                                                      |   0%  |                                                                              |=                                                                     |   2%  |                                                                              |===                                                                   |   4%  |                                                                              |====                                                                  |   6%  |                                                                              |======                                                                |   8%  |                                                                              |=======                                                               |  10%  |                                                                              |========                                                              |  12%  |                                                                              |==========                                                            |  14%  |                                                                              |===========                                                           |  16%  |                                                                              |=============                                                         |  18%  |                                                                              |==============                                                        |  20%  |                                                                              |===============                                                       |  22%  |                                                                              |=================                                                     |  24%  |                                                                              |==================                                                    |  26%  |                                                                              |====================                                                  |  28%  |                                                                              |=====================                                                 |  30%  |                                                                              |======================                                                |  32%  |                                                                              |========================                                              |  34%  |                                                                              |=========================                                             |  36%  |                                                                              |===========================                                           |  38%  |                                                                              |============================                                          |  40%  |                                                                              |=============================                                         |  42%  |                                                                              |===============================                                       |  44%  |                                                                              |================================                                      |  46%  |                                                                              |==================================                                    |  48%  |                                                                              |===================================                                   |  50%  |                                                                              |====================================                                  |  52%  |                                                                              |======================================                                |  54%  |                                                                              |=======================================                               |  56%  |                                                                              |=========================================                             |  58%  |                                                                              |==========================================                            |  60%  |                                                                              |===========================================                           |  62%  |                                                                              |=============================================                         |  64%  |                                                                              |==============================================                        |  66%  |                                                                              |================================================                      |  68%  |                                                                              |=================================================                     |  70%  |                                                                              |==================================================                    |  72%  |                                                                              |====================================================                  |  74%  |                                                                              |=====================================================                 |  76%  |                                                                              |=======================================================               |  78%  |                                                                              |========================================================              |  80%  |                                                                              |=========================================================             |  82%  |                                                                              |===========================================================           |  84%  |                                                                              |============================================================          |  86%  |                                                                              |==============================================================        |  88%  |                                                                              |===============================================================       |  90%  |                                                                              |================================================================      |  92%  |                                                                              |==================================================================    |  94%  |                                                                              |===================================================================   |  96%  |                                                                              |===================================================================== |  98%  |                                                                              |======================================================================| 100%
> 
> # When continuous variables are more informative (default)
> result_cont_first <- DIBmix(X = data, ncl = 3,
+                            catcols = c(1, 2, 3), 
+                            contcols = c(4, 5, 6),
+                            cat_first = FALSE,
+                            nstart = 50)
  |                                                                              |                                                                      |   0%  |                                                                              |=                                                                     |   2%  |                                                                              |===                                                                   |   4%  |                                                                              |====                                                                  |   6%  |                                                                              |======                                                                |   8%  |                                                                              |=======                                                               |  10%  |                                                                              |========                                                              |  12%  |                                                                              |==========                                                            |  14%  |                                                                              |===========                                                           |  16%  |                                                                              |=============                                                         |  18%  |                                                                              |==============                                                        |  20%  |                                                                              |===============                                                       |  22%  |                                                                              |=================                                                     |  24%  |                                                                              |==================                                                    |  26%  |                                                                              |====================                                                  |  28%  |                                                                              |=====================                                                 |  30%  |                                                                              |======================                                                |  32%  |                                                                              |========================                                              |  34%  |                                                                              |=========================                                             |  36%  |                                                                              |===========================                                           |  38%  |                                                                              |============================                                          |  40%  |                                                                              |=============================                                         |  42%  |                                                                              |===============================                                       |  44%  |                                                                              |================================                                      |  46%  |                                                                              |==================================                                    |  48%  |                                                                              |===================================                                   |  50%  |                                                                              |====================================                                  |  52%  |                                                                              |======================================                                |  54%  |                                                                              |=======================================                               |  56%  |                                                                              |=========================================                             |  58%  |                                                                              |==========================================                            |  60%  |                                                                              |===========================================                           |  62%  |                                                                              |=============================================                         |  64%  |                                                                              |==============================================                        |  66%  |                                                                              |================================================                      |  68%  |                                                                              |=================================================                     |  70%  |                                                                              |==================================================                    |  72%  |                                                                              |====================================================                  |  74%  |                                                                              |=====================================================                 |  76%  |                                                                              |=======================================================               |  78%  |                                                                              |========================================================              |  80%  |                                                                              |=========================================================             |  82%  |                                                                              |===========================================================           |  84%  |                                                                              |============================================================          |  86%  |                                                                              |==============================================================        |  88%  |                                                                              |===============================================================       |  90%  |                                                                              |================================================================      |  92%  |                                                                              |==================================================================    |  94%  |                                                                              |===================================================================   |  96%  |                                                                              |===================================================================== |  98%  |                                                                              |======================================================================| 100%
> 
> # Compare clustering performance
> if (requireNamespace("mclust", quietly = TRUE)){  # For adjustedRandIndex
+   print(paste("Agreement between approaches:", 
+               round(mclust::adjustedRandIndex(result_cat_first$Cluster, 
+                     result_cont_first$Cluster), 3)))
+   }
[1] "Agreement between approaches: -0.007"
> 
> 
> 
> cleanEx()
> nameEx("GIBcat")
> ### * GIBcat
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: GIBcat
> ### Title: Cluster Categorical Data Using the Generalised Information
> ###   Bottleneck Algorithm
> ### Aliases: GIBcat
> ### Keywords: clustering
> 
> ### ** Examples
> 
> # Simulated categorical data
> set.seed(123)
> X <- data.frame(
+   Var1 = as.factor(sample(letters[1:3], 200, replace = TRUE)),  # Nominal variable
+   Var2 = as.factor(sample(letters[4:6], 200, replace = TRUE)),  # Nominal variable
+   Var3 = factor(sample(c("low", "medium", "high"), 200, replace = TRUE),
+                 levels = c("low", "medium", "high"), ordered = TRUE)  # Ordinal variable
+ )
> 
> # Run GIBcat with automatic lambda selection and multiple initializations
> result <- GIBcat(X = X, ncl = 2, beta = 25, alpha = 0.75, lambda = -1, nstart = 10)
  |                                                                              |                                                                      |   0%  |                                                                              |=======                                                               |  10%  |                                                                              |==============                                                        |  20%  |                                                                              |=====================                                                 |  30%  |                                                                              |============================                                          |  40%  |                                                                              |===================================                                   |  50%  |                                                                              |==========================================                            |  60%  |                                                                              |=================================================                     |  70%  |                                                                              |========================================================              |  80%  |                                                                              |===============================================================       |  90%  |                                                                              |======================================================================| 100%
> 
> # Print clustering results
> print(result$Cluster)       # Cluster membership matrix
            [,1]        [,2]        [,3]        [,4]       [,5]        [,6]
[1,] 0.005527515 0.003914096 0.007123054 0.002555871 0.00851922 0.993385746
[2,] 0.994472485 0.996085904 0.992876946 0.997444129 0.99148078 0.006614254
           [,7]        [,8]       [,9]       [,10]       [,11]      [,12]
[1,] 0.98473752 0.993385746 0.98429958 0.007982584 0.002555871 0.97119057
[2,] 0.01526248 0.006614254 0.01570042 0.992017416 0.997444129 0.02880943
           [,13]       [,14]       [,15]       [,16]      [,17]       [,18]
[1,] 0.003425297 0.993385746 0.005527515 0.003612475 0.98771437 0.004278815
[2,] 0.996574703 0.006614254 0.994472485 0.996387525 0.01228563 0.995721185
          [,19]      [,20]       [,21]       [,22]     [,23]       [,24]
[1,] 0.01148544 0.99043248 0.003612475 0.003425297 0.9859828 0.993385746
[2,] 0.98851456 0.00956752 0.996387525 0.996574703 0.0140172 0.006614254
         [,25]      [,26]      [,27]      [,28]       [,29]       [,30]
[1,] 0.9859828 0.98473752 0.98634934 0.01190586 0.003936062 0.004070245
[2,] 0.0140172 0.01526248 0.01365066 0.98809414 0.996063938 0.995929755
           [,31]      [,32]     [,33]       [,34]       [,35]       [,36]
[1,] 0.004667492 0.00851922 0.9859828 0.004667492 0.003936062 0.993385746
[2,] 0.995332508 0.99148078 0.0140172 0.995332508 0.996063938 0.006614254
           [,37]      [,38]      [,39]       [,40]       [,41]      [,42]
[1,] 0.004667492 0.98429958 0.99043248 0.003425297 0.002713471 0.98429958
[2,] 0.995332508 0.01570042 0.00956752 0.996574703 0.997286529 0.01570042
           [,43]      [,44]       [,45]      [,46]       [,47]       [,48]
[1,] 0.007123054 0.99043248 0.003914096 0.97278522 0.003936062 0.004070245
[2,] 0.992876946 0.00956752 0.996085904 0.02721478 0.996063938 0.995929755
           [,49]       [,50]      [,51]      [,52]     [,53]      [,54]
[1,] 0.003425297 0.002713471 0.99043248 0.99043248 0.9859828 0.98634934
[2,] 0.996574703 0.997286529 0.00956752 0.00956752 0.0140172 0.01365066
           [,55]      [,56]       [,57]      [,58]       [,59]       [,60]
[1,] 0.005507497 0.98634934 0.004667492 0.98429958 0.003425297 0.008371663
[2,] 0.994492503 0.01365066 0.995332508 0.01570042 0.996574703 0.991628337
          [,61]     [,62]      [,63]     [,64]      [,65]      [,66]
[1,] 0.97278522 0.9859828 0.98634934 0.9859828 0.01190586 0.98429958
[2,] 0.02721478 0.0140172 0.01365066 0.0140172 0.98809414 0.01570042
           [,67]      [,68]       [,69]       [,70]       [,71]       [,72]
[1,] 0.993385746 0.98473752 0.003914096 0.008371663 0.002713471 0.004278815
[2,] 0.006614254 0.01526248 0.996085904 0.991628337 0.997286529 0.995721185
          [,73]      [,74]       [,75]       [,76]      [,77]       [,78]
[1,] 0.00851922 0.98634934 0.993385746 0.993385746 0.99043248 0.993385746
[2,] 0.99148078 0.01365066 0.006614254 0.006614254 0.00956752 0.006614254
          [,79]      [,80]      [,81]       [,82]       [,83]       [,84]
[1,] 0.01148544 0.98634934 0.97119057 0.005527515 0.007123054 0.003425297
[2,] 0.98851456 0.01365066 0.02880943 0.994472485 0.992876946 0.996574703
          [,85]      [,86]       [,87]       [,88]      [,89]       [,90]
[1,] 0.98473752 0.98634934 0.993385746 0.002115936 0.98429958 0.003936062
[2,] 0.01526248 0.01365066 0.006614254 0.997884064 0.01570042 0.996063938
           [,91]      [,92]       [,93]       [,94]       [,95]       [,96]
[1,] 0.993385746 0.98771437 0.007982584 0.002713471 0.004070245 0.003936062
[2,] 0.006614254 0.01228563 0.992017416 0.997286529 0.995929755 0.996063938
          [,97]       [,98]     [,99]    [,100]      [,101]      [,102]
[1,] 0.97119057 0.003612475 0.9859828 0.9859828 0.004278815 0.993385746
[2,] 0.02880943 0.996387525 0.0140172 0.0140172 0.995721185 0.006614254
          [,103]      [,104]      [,105]      [,106]     [,107]      [,108]
[1,] 0.004070245 0.004278815 0.003425297 0.003425297 0.00851922 0.005507497
[2,] 0.995929755 0.995721185 0.996574703 0.996574703 0.99148078 0.994492503
          [,109]      [,110]     [,111]      [,112]     [,113]      [,114]
[1,] 0.005507497 0.002713471 0.98473752 0.002713471 0.01190586 0.005527515
[2,] 0.994492503 0.997286529 0.01526248 0.997286529 0.98809414 0.994472485
          [,115]      [,116]     [,117]     [,118]     [,119]     [,120]
[1,] 0.004070245 0.007982584 0.01190586 0.01190586 0.97119057 0.98771437
[2,] 0.995929755 0.992017416 0.98809414 0.98809414 0.02880943 0.01228563
          [,121]      [,122]      [,123]      [,124]     [,125]      [,126]
[1,] 0.005507497 0.003936062 0.005507497 0.004278815 0.97278522 0.004278815
[2,] 0.994492503 0.996063938 0.994492503 0.995721185 0.02721478 0.995721185
          [,127]      [,128]     [,129]    [,130]     [,131]     [,132]
[1,] 0.003936062 0.004278815 0.98634934 0.9859828 0.98429958 0.01190586
[2,] 0.996063938 0.995721185 0.01365066 0.0140172 0.01570042 0.98809414
         [,133]      [,134]     [,135]     [,136]     [,137]      [,138]
[1,] 0.01190586 0.993385746 0.98771437 0.00851922 0.98429958 0.002713471
[2,] 0.98809414 0.006614254 0.01228563 0.99148078 0.01570042 0.997286529
          [,139]     [,140]     [,141]      [,142]      [,143]      [,144]
[1,] 0.003425297 0.97119057 0.98634934 0.007123054 0.004278815 0.005507497
[2,] 0.996574703 0.02880943 0.01365066 0.992876946 0.995721185 0.994492503
          [,145]     [,146]      [,147]     [,148]      [,149]      [,150]
[1,] 0.004667492 0.98429958 0.002115936 0.00851922 0.002555871 0.005507497
[2,] 0.995332508 0.01570042 0.997884064 0.99148078 0.997444129 0.994492503
         [,151]     [,152]      [,153]     [,154]      [,155]      [,156]
[1,] 0.01148544 0.98771437 0.004070245 0.97278522 0.003914096 0.004278815
[2,] 0.98851456 0.01228563 0.995929755 0.02721478 0.996085904 0.995721185
          [,157]      [,158]     [,159]      [,160]     [,161]      [,162]
[1,] 0.003936062 0.002115936 0.97119057 0.004070245 0.98634934 0.008371663
[2,] 0.996063938 0.997884064 0.02880943 0.995929755 0.01365066 0.991628337
         [,163]      [,164]      [,165]     [,166]      [,167]      [,168]
[1,] 0.98429958 0.007123054 0.003425297 0.98473752 0.003612475 0.004070245
[2,] 0.01570042 0.992876946 0.996574703 0.01526248 0.996387525 0.995929755
          [,169]      [,170]     [,171]      [,172]      [,173]      [,174]
[1,] 0.007123054 0.003914096 0.01148544 0.005527515 0.993385746 0.004667492
[2,] 0.992876946 0.996085904 0.98851456 0.994472485 0.006614254 0.995332508
          [,175]     [,176]     [,177]     [,178]      [,179]      [,180]
[1,] 0.003612475 0.98473752 0.98429958 0.01148544 0.008371663 0.002713471
[2,] 0.996387525 0.01526248 0.01570042 0.98851456 0.991628337 0.997286529
          [,181]      [,182]      [,183]     [,184]      [,185]     [,186]
[1,] 0.004667492 0.002555871 0.002115936 0.99043248 0.008371663 0.99043248
[2,] 0.995332508 0.997444129 0.997884064 0.00956752 0.991628337 0.00956752
         [,187]     [,188]      [,189]      [,190]      [,191]      [,192]
[1,] 0.98771437 0.98634934 0.002115936 0.002555871 0.003612475 0.002713471
[2,] 0.01228563 0.01365066 0.997884064 0.997444129 0.996387525 0.997286529
         [,193]      [,194]      [,195]      [,196]      [,197]      [,198]
[1,] 0.98634934 0.004667492 0.002115936 0.005527515 0.007123054 0.005507497
[2,] 0.01365066 0.995332508 0.997884064 0.994472485 0.992876946 0.994492503
          [,199]      [,200]
[1,] 0.003612475 0.002555871
[2,] 0.996387525 0.997444129
> print(result$Entropy)       # Entropy of final clustering
[1] 0.9600031
> print(result$CondEntropy)   # Conditional entropy of final clustering
[1] 0.06962192
> print(result$MutualInfo)    # Mutual information between Y and T
[1] 0.04832157
> 
> 
> 
> cleanEx()
> nameEx("GIBcont")
> ### * GIBcont
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: GIBcont
> ### Title: Cluster Continuous Data Using the Generalised Information
> ###   Bottleneck Algorithm
> ### Aliases: GIBcont
> ### Keywords: clustering
> 
> ### ** Examples
> 
> # Generate simulated continuous data
> set.seed(123)
> X <- matrix(rnorm(200), ncol = 5)  # 200 observations, 5 features
> 
> # Run GIBcont with automatic bandwidth selection and multiple initializations
> result <- GIBcont(X = X, ncl = 2, beta = 50, alpha = 0.75, s = -1, nstart = 10)
  |                                                                              |                                                                      |   0%  |                                                                              |=======                                                               |  10%  |                                                                              |==============                                                        |  20%  |                                                                              |=====================                                                 |  30%  |                                                                              |============================                                          |  40%  |                                                                              |===================================                                   |  50%  |                                                                              |==========================================                            |  60%  |                                                                              |=================================================                     |  70%  |                                                                              |========================================================              |  80%  |                                                                              |===============================================================       |  90%  |                                                                              |======================================================================| 100%
> 
> # Print clustering results
> print(result$Cluster)       # Cluster membership matrix
             [,1]         [,2]         [,3]      [,4]         [,5]         [,6]
[1,] 9.999399e-01 9.999981e-01 9.999998e-01 0.1059648 9.999016e-01 9.999934e-01
[2,] 6.005455e-05 1.856941e-06 2.285785e-07 0.8940352 9.838863e-05 6.570729e-06
             [,7]         [,8]         [,9]        [,10]        [,11]
[1,] 9.999255e-01 9.999951e-01 0.9998566092 9.999343e-01 9.999466e-01
[2,] 7.448284e-05 4.881072e-06 0.0001433908 6.572486e-05 5.343717e-05
            [,12]        [,13]      [,14]        [,15]        [,16]
[1,] 9.999639e-01 9.999777e-01 0.97556143 9.999966e-01 9.999676e-01
[2,] 3.606506e-05 2.233399e-05 0.02443857 3.366996e-06 3.239862e-05
            [,17]        [,18]        [,19]        [,20]        [,21]
[1,] 9.999969e-01 0.9997496718 0.9998987921 9.999953e-01 9.999957e-01
[2,] 3.132590e-06 0.0002503282 0.0001012079 4.657291e-06 4.278445e-06
           [,22]        [,23]        [,24]        [,25]        [,26]
[1,] 0.999863303 9.999969e-01 9.999996e-01 9.999991e-01 9.999832e-01
[2,] 0.000136697 3.130893e-06 4.257892e-07 9.210475e-07 1.680887e-05
            [,27]        [,28]        [,29]        [,30]        [,31]
[1,] 0.9997183314 9.999839e-01 0.9993826161 0.9996642886 9.999847e-01
[2,] 0.0002816686 1.611514e-05 0.0006173839 0.0003357114 1.530811e-05
            [,32]        [,33]        [,34]        [,35]      [,36]
[1,] 9.999994e-01 9.999238e-01 9.999990e-01 9.999992e-01 0.98409556
[2,] 5.782546e-07 7.619578e-05 9.702151e-07 8.237759e-07 0.01590444
            [,37]        [,38]        [,39]        [,40]
[1,] 9.999401e-01 9.999998e-01 9.999921e-01 9.999990e-01
[2,] 5.985452e-05 2.218146e-07 7.924579e-06 9.978061e-07
> print(result$Entropy)       # Entropy of final clustering
[1] 0.1602505
> print(result$CondEntropy)   # Conditional entropy of final clustering
[1] 0.02015292
> print(result$MutualInfo)    # Mutual information between Y and T
[1] 0.00335043
> 
> 
> 
> cleanEx()
> nameEx("GIBmix")
> ### * GIBmix
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: GIBmix
> ### Title: Generalised Information Bottleneck Clustering for Mixed-Type
> ###   Data
> ### Aliases: GIBmix
> ### Keywords: clustering
> 
> ### ** Examples
> 
> # Example dataset with categorical, ordinal, and continuous variables
> set.seed(123)
> data <- data.frame(
+   cat_var = factor(sample(letters[1:3], 100, replace = TRUE)),      # Nominal categorical variable
+   ord_var = factor(sample(c("low", "medium", "high"), 100, replace = TRUE),
+                    levels = c("low", "medium", "high"),
+                    ordered = TRUE),                                # Ordinal variable
+   cont_var1 = rnorm(100),                                          # Continuous variable 1
+   cont_var2 = runif(100)                                           # Continuous variable 2
+ )
> 
> # Perform Mixed-Type Fuzzy Clustering with Generalised IB
> result <- GIBmix(X = data, ncl = 3, beta = 2, alpha = 0.5, catcols = 1:2, contcols = 3:4, nstart = 20)
  |                                                                              |                                                                      |   0%  |                                                                              |====                                                                  |   5%  |                                                                              |=======                                                               |  10%  |                                                                              |==========                                                            |  15%  |                                                                              |==============                                                        |  20%  |                                                                              |==================                                                    |  25%  |                                                                              |=====================                                                 |  30%  |                                                                              |========================                                              |  35%  |                                                                              |============================                                          |  40%  |                                                                              |================================                                      |  45%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================                                |  55%  |                                                                              |==========================================                            |  60%  |                                                                              |==============================================                        |  65%  |                                                                              |=================================================                     |  70%  |                                                                              |====================================================                  |  75%  |                                                                              |========================================================              |  80%  |                                                                              |============================================================          |  85%  |                                                                              |===============================================================       |  90%1 cluster(s) dropped. Down to 2 cluster(s).

  |                                                                              |==================================================================    |  95%  |                                                                              |======================================================================| 100%1 cluster(s) dropped. Down to 2 cluster(s).


> 
> # Print clustering results
> print(result$Cluster)       # Cluster membership matrix
             [,1]         [,2]         [,3]         [,4]         [,5]
[1,] 9.787348e-01 9.999945e-01 2.546564e-01 9.992981e-01 9.999886e-01
[2,] 1.588792e-17 5.308457e-17 1.538404e-25 3.608745e-35 2.223532e-10
[3,] 2.126516e-02 5.510909e-06 7.453436e-01 7.018758e-04 1.137978e-05
             [,6]         [,7]         [,8]         [,9]        [,10]
[1,] 1.221325e-02 9.999228e-01 1.943070e-05 9.999929e-01 4.907937e-04
[2,] 7.966591e-34 6.021035e-14 5.037375e-14 1.974676e-28 2.403206e-21
[3,] 9.877867e-01 7.720459e-05 9.999806e-01 7.136783e-06 9.995092e-01
            [,11]        [,12]        [,13]        [,14]        [,15]
[1,] 9.845392e-01 3.600092e-03 5.219329e-02 9.267465e-01 8.764802e-02
[2,] 4.900406e-22 3.192289e-35 1.441900e-32 1.432841e-31 4.929146e-27
[3,] 1.546085e-02 9.963999e-01 9.478067e-01 7.325347e-02 9.123520e-01
            [,16]        [,17]        [,18]        [,19]        [,20]
[1,] 9.999987e-01 9.999939e-01 9.677942e-05 9.998462e-01 6.412939e-04
[2,] 1.428025e-29 4.094354e-13 9.479920e-12 1.227494e-27 1.769205e-20
[3,] 1.271448e-06 6.092329e-06 9.999032e-01 1.538241e-04 9.993587e-01
            [,21]        [,22]        [,23]        [,24]        [,25]
[1,] 9.998482e-01 3.137644e-02 1.620001e-04 9.999920e-01 9.999939e-01
[2,] 1.631986e-14 7.501047e-22 5.155470e-34 5.021107e-18 1.348137e-19
[3,] 1.517829e-04 9.686236e-01 9.998380e-01 7.992462e-06 6.089634e-06
            [,26]        [,27]        [,28]        [,29]        [,30]
[1,] 3.428356e-02 9.776718e-01 3.258794e-04 6.578854e-05 9.999996e-01
[2,] 8.136598e-20 2.688782e-23 4.316362e-19 7.368336e-31 1.234430e-10
[3,] 9.657164e-01 2.232823e-02 9.996741e-01 9.999342e-01 4.222175e-07
            [,31]        [,32]        [,33]        [,34]        [,35]
[1,] 9.262474e-01 9.871541e-03 1.235365e-07 9.321711e-05 9.999638e-01
[2,] 2.301125e-27 2.594935e-32 9.999999e-01 3.136487e-31 4.387492e-16
[3,] 7.375256e-02 9.901285e-01 3.146127e-13 9.999068e-01 3.623979e-05
            [,36]        [,37]        [,38]        [,39]        [,40]
[1,] 9.999995e-01 7.669978e-02 7.962706e-04 9.987318e-01 9.972696e-01
[2,] 8.473097e-13 8.583341e-27 2.747581e-22 1.183486e-17 1.204089e-21
[3,] 5.121701e-07 9.233002e-01 9.992037e-01 1.268164e-03 2.730425e-03
            [,41]        [,42]        [,43]        [,44]        [,45]
[1,] 9.996009e-01 9.999985e-01 0.9968706225 9.999365e-01 4.157948e-01
[2,] 1.052148e-18 9.618750e-17 0.0001259737 9.807453e-24 6.883939e-29
[3,] 3.991420e-04 1.470658e-06 0.0030034037 6.351908e-05 5.842052e-01
            [,46]        [,47]        [,48]        [,49]        [,50]
[1,] 8.911165e-01 6.858230e-05 9.993570e-01 9.577558e-01 9.999892e-01
[2,] 1.708382e-21 1.412130e-25 1.569274e-16 5.854134e-24 7.681839e-26
[3,] 1.088835e-01 9.999314e-01 6.429671e-04 4.224415e-02 1.083776e-05
            [,51]        [,52]        [,53]        [,54]        [,55]
[1,] 7.101900e-05 9.900305e-01 5.838762e-03 9.999645e-01 9.671984e-01
[2,] 1.323879e-18 7.188132e-23 7.713372e-31 2.251596e-20 6.394591e-22
[3,] 9.999290e-01 9.969454e-03 9.941612e-01 3.554196e-05 3.280160e-02
            [,56]        [,57]        [,58]        [,59]        [,60]
[1,] 5.642797e-04 9.999981e-01 2.380369e-04 9.992264e-01 9.983811e-01
[2,] 1.470907e-18 7.328675e-17 2.827828e-21 7.239394e-23 2.587966e-18
[3,] 9.994357e-01 1.907982e-06 9.997620e-01 7.736306e-04 1.618915e-03
            [,61]        [,62]        [,63]        [,64]        [,65]
[1,] 9.991529e-01 9.999995e-01 7.888810e-01 2.239656e-02 4.621279e-06
[2,] 6.763999e-22 9.106126e-16 5.671147e-27 6.080738e-32 9.205584e-15
[3,] 8.470614e-04 5.024589e-07 2.111190e-01 9.776034e-01 9.999954e-01
            [,66]        [,67]        [,68]        [,69]        [,70]
[1,] 9.999998e-01 4.709107e-05 9.989823e-01 1.866511e-04 1.947097e-04
[2,] 9.555049e-13 1.042015e-36 3.169470e-23 1.112366e-34 3.267376e-11
[3,] 2.013051e-07 9.999529e-01 1.017692e-03 9.998133e-01 9.998053e-01
            [,71]        [,72]        [,73]        [,74]        [,75]
[1,] 9.827728e-01 1.876710e-03 9.999997e-01 8.260989e-03 9.968375e-01
[2,] 3.388687e-11 4.729263e-28 4.190924e-13 6.798599e-28 9.523573e-23
[3,] 1.722721e-02 9.981233e-01 2.620025e-07 9.917390e-01 3.162492e-03
            [,76]        [,77]        [,78]        [,79]        [,80]
[1,] 1.376236e-03 7.540501e-01 9.999302e-01 2.469565e-03 9.999971e-01
[2,] 6.728886e-32 1.785379e-25 1.081973e-07 2.865305e-26 5.393755e-17
[3,] 9.986238e-01 2.459499e-01 6.973035e-05 9.975304e-01 2.939568e-06
            [,81]        [,82]        [,83]        [,84]        [,85]
[1,] 1.116387e-03 9.999793e-01 3.160919e-03 7.448698e-05 9.999989e-01
[2,] 1.753801e-24 4.853453e-10 3.646690e-29 1.893180e-34 6.225183e-07
[3,] 9.988836e-01 2.070715e-05 9.968391e-01 9.999255e-01 4.509708e-07
            [,86]        [,87]        [,88]        [,89]        [,90]
[1,] 6.250690e-04 4.150354e-03 9.907275e-01 9.974004e-01 9.999557e-01
[2,] 6.400980e-30 1.411384e-30 4.661266e-28 3.357718e-28 6.127857e-22
[3,] 9.993749e-01 9.958496e-01 9.272458e-03 2.599564e-03 4.429948e-05
            [,91]        [,92]        [,93]        [,94]        [,95]
[1,] 4.660967e-01 3.517254e-05 7.264170e-01 3.456119e-01 5.853598e-02
[2,] 1.171829e-17 4.109281e-19 6.235358e-17 1.334601e-24 3.610588e-23
[3,] 5.339033e-01 9.999648e-01 2.735830e-01 6.543881e-01 9.414640e-01
            [,96]        [,97]        [,98]        [,99]       [,100]
[1,] 5.773933e-01 8.065852e-01 9.999998e-01 9.999971e-01 3.222986e-06
[2,] 2.587324e-26 6.916612e-26 8.537092e-12 2.146050e-25 7.734450e-15
[3,] 4.226067e-01 1.934148e-01 1.876514e-07 2.909191e-06 9.999968e-01
> print(result$Entropy)       # Entropy of final clustering
[1] 1.058023
> print(result$CondEntropy)   # Conditional entropy of final clustering
[1] 0.1297683
> print(result$MutualInfo)    # Mutual information between Y and T
[1] 0.5294276
> 
> 
> 
> cleanEx()
> nameEx("IBcat")
> ### * IBcat
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: IBcat
> ### Title: Cluster Categorical Data Using the Information Bottleneck
> ###   Algorithm
> ### Aliases: IBcat
> ### Keywords: clustering
> 
> ### ** Examples
> 
> # Simulated categorical data
> set.seed(123)
> X <- data.frame(
+   Var1 = as.factor(sample(letters[1:3], 200, replace = TRUE)),  # Nominal variable
+   Var2 = as.factor(sample(letters[4:6], 200, replace = TRUE)),  # Nominal variable
+   Var3 = factor(sample(c("low", "medium", "high"), 200, replace = TRUE),
+                 levels = c("low", "medium", "high"), ordered = TRUE)  # Ordinal variable
+ )
> 
> # Run IBcat with automatic lambda selection and multiple initializations
> result <- IBcat(X = X, ncl = 3, beta = 15, lambda = -1, nstart = 10)
  |                                                                              |                                                                      |   0%  |                                                                              |=======                                                               |  10%  |                                                                              |==============                                                        |  20%  |                                                                              |=====================                                                 |  30%  |                                                                              |============================                                          |  40%  |                                                                              |===================================                                   |  50%  |                                                                              |==========================================                            |  60%  |                                                                              |=================================================                     |  70%  |                                                                              |========================================================              |  80%  |                                                                              |===============================================================       |  90%  |                                                                              |======================================================================| 100%
> 
> # Print clustering results
> print(result$Cluster)       # Cluster membership matrix
          [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
[1,] 0.1988566 0.1792602 0.2432389 0.1757971 0.2782031 0.7956605 0.7365631
[2,] 0.6110928 0.1609833 0.5086306 0.3756755 0.4409193 0.1295506 0.1753578
[3,] 0.1900506 0.6597564 0.2481306 0.4485274 0.2808776 0.0747889 0.0880791
          [,8]      [,9]     [,10]     [,11]      [,12]      [,13]     [,14]
[1,] 0.7956605 0.7497553 0.2431209 0.1757971 0.66685841 0.12396900 0.7956605
[2,] 0.1295506 0.1194938 0.3962522 0.3756755 0.24841538 0.06510402 0.1295506
[3,] 0.0747889 0.1307509 0.3606269 0.4485274 0.08472621 0.81092698 0.0747889
         [,15]     [,16]      [,17]      [,18]     [,19]     [,20]     [,21]
[1,] 0.1988566 0.1856250 0.78384576 0.17479765 0.2801123 0.7584240 0.1856250
[2,] 0.6110928 0.5275262 0.07261026 0.08744283 0.3341600 0.0522488 0.5275262
[3,] 0.1900506 0.2868488 0.14354399 0.73775953 0.3857278 0.1893272 0.2868488
          [,22]      [,23]     [,24]      [,25]     [,26]      [,27]     [,28]
[1,] 0.12396900 0.76630538 0.7956605 0.76630538 0.7365631 0.73094850 0.2108798
[2,] 0.06510402 0.08894396 0.1295506 0.08894396 0.1753578 0.06572333 0.6755177
[3,] 0.81092698 0.14475065 0.0747889 0.14475065 0.0880791 0.20332817 0.1136024
         [,29]     [,30]     [,31]     [,32]      [,33]     [,34]     [,35]
[1,] 0.1716058 0.2022402 0.1337913 0.2782031 0.76630538 0.1337913 0.1716058
[2,] 0.1113652 0.2802564 0.0525115 0.4409193 0.08894396 0.0525115 0.1113652
[3,] 0.7170290 0.5175034 0.8136972 0.2808776 0.14475065 0.8136972 0.7170290
         [,36]     [,37]     [,38]     [,39]      [,40]      [,41]     [,42]
[1,] 0.7956605 0.1337913 0.7497553 0.7584240 0.12396900 0.10306410 0.7497553
[2,] 0.1295506 0.0525115 0.1194938 0.0522488 0.06510402 0.82774288 0.1194938
[3,] 0.0747889 0.8136972 0.1307509 0.1893272 0.81092698 0.06919302 0.1307509
         [,43]     [,44]     [,45]     [,46]     [,47]     [,48]      [,49]
[1,] 0.2432389 0.7584240 0.1792602 0.6955352 0.1716058 0.2022402 0.12396900
[2,] 0.5086306 0.0522488 0.1609833 0.1013220 0.1113652 0.2802564 0.06510402
[3,] 0.2481306 0.1893272 0.6597564 0.2031427 0.7170290 0.5175034 0.81092698
          [,50]     [,51]     [,52]      [,53]      [,54]      [,55]      [,56]
[1,] 0.10306410 0.7584240 0.7584240 0.76630538 0.73094850 0.15387423 0.73094850
[2,] 0.82774288 0.0522488 0.0522488 0.08894396 0.06572333 0.74743584 0.06572333
[3,] 0.06919302 0.1893272 0.1893272 0.14475065 0.20332817 0.09868993 0.20332817
         [,57]     [,58]      [,59]     [,60]     [,61]      [,62]      [,63]
[1,] 0.1337913 0.7497553 0.12396900 0.2460076 0.6955352 0.76630538 0.73094850
[2,] 0.0525115 0.1194938 0.06510402 0.2317934 0.1013220 0.08894396 0.06572333
[3,] 0.8136972 0.1307509 0.81092698 0.5221990 0.2031427 0.14475065 0.20332817
          [,64]     [,65]     [,66]     [,67]     [,68]     [,69]     [,70]
[1,] 0.76630538 0.2108798 0.7497553 0.7956605 0.7365631 0.1792602 0.2460076
[2,] 0.08894396 0.6755177 0.1194938 0.1295506 0.1753578 0.1609833 0.2317934
[3,] 0.14475065 0.1136024 0.1307509 0.0747889 0.0880791 0.6597564 0.5221990
          [,71]      [,72]     [,73]      [,74]     [,75]     [,76]     [,77]
[1,] 0.10306410 0.17479765 0.2782031 0.73094850 0.7956605 0.7956605 0.7584240
[2,] 0.82774288 0.08744283 0.4409193 0.06572333 0.1295506 0.1295506 0.0522488
[3,] 0.06919302 0.73775953 0.2808776 0.20332817 0.0747889 0.0747889 0.1893272
         [,78]     [,79]      [,80]      [,81]     [,82]     [,83]      [,84]
[1,] 0.7956605 0.2801123 0.73094850 0.66685841 0.1988566 0.2432389 0.12396900
[2,] 0.1295506 0.3341600 0.06572333 0.24841538 0.6110928 0.5086306 0.06510402
[3,] 0.0747889 0.3857278 0.20332817 0.08472621 0.1900506 0.2481306 0.81092698
         [,85]      [,86]     [,87]      [,88]     [,89]     [,90]     [,91]
[1,] 0.7365631 0.73094850 0.7956605 0.12094826 0.7497553 0.1716058 0.7956605
[2,] 0.1753578 0.06572333 0.1295506 0.09996631 0.1194938 0.1113652 0.1295506
[3,] 0.0880791 0.20332817 0.0747889 0.77908543 0.1307509 0.7170290 0.0747889
          [,92]     [,93]      [,94]     [,95]     [,96]      [,97]     [,98]
[1,] 0.78384576 0.2431209 0.10306410 0.2022402 0.1716058 0.66685841 0.1856250
[2,] 0.07261026 0.3962522 0.82774288 0.2802564 0.1113652 0.24841538 0.5275262
[3,] 0.14354399 0.3606269 0.06919302 0.5175034 0.7170290 0.08472621 0.2868488
          [,99]     [,100]     [,101]    [,102]    [,103]     [,104]     [,105]
[1,] 0.76630538 0.76630538 0.17479765 0.7956605 0.2022402 0.17479765 0.12396900
[2,] 0.08894396 0.08894396 0.08744283 0.1295506 0.2802564 0.08744283 0.06510402
[3,] 0.14475065 0.14475065 0.73775953 0.0747889 0.5175034 0.73775953 0.81092698
         [,106]    [,107]     [,108]     [,109]     [,110]    [,111]     [,112]
[1,] 0.12396900 0.2782031 0.15387423 0.15387423 0.10306410 0.7365631 0.10306410
[2,] 0.06510402 0.4409193 0.74743584 0.74743584 0.82774288 0.1753578 0.82774288
[3,] 0.81092698 0.2808776 0.09868993 0.09868993 0.06919302 0.0880791 0.06919302
        [,113]    [,114]    [,115]    [,116]    [,117]    [,118]     [,119]
[1,] 0.2108798 0.1988566 0.2022402 0.2431209 0.2108798 0.2108798 0.66685841
[2,] 0.6755177 0.6110928 0.2802564 0.3962522 0.6755177 0.6755177 0.24841538
[3,] 0.1136024 0.1900506 0.5175034 0.3606269 0.1136024 0.1136024 0.08472621
         [,120]     [,121]    [,122]     [,123]     [,124]    [,125]     [,126]
[1,] 0.78384576 0.15387423 0.1716058 0.15387423 0.17479765 0.6955352 0.17479765
[2,] 0.07261026 0.74743584 0.1113652 0.74743584 0.08744283 0.1013220 0.08744283
[3,] 0.14354399 0.09868993 0.7170290 0.09868993 0.73775953 0.2031427 0.73775953
        [,127]     [,128]     [,129]     [,130]    [,131]    [,132]    [,133]
[1,] 0.1716058 0.17479765 0.73094850 0.76630538 0.7497553 0.2108798 0.2108798
[2,] 0.1113652 0.08744283 0.06572333 0.08894396 0.1194938 0.6755177 0.6755177
[3,] 0.7170290 0.73775953 0.20332817 0.14475065 0.1307509 0.1136024 0.1136024
        [,134]     [,135]    [,136]    [,137]     [,138]     [,139]     [,140]
[1,] 0.7956605 0.78384576 0.2782031 0.7497553 0.10306410 0.12396900 0.66685841
[2,] 0.1295506 0.07261026 0.4409193 0.1194938 0.82774288 0.06510402 0.24841538
[3,] 0.0747889 0.14354399 0.2808776 0.1307509 0.06919302 0.81092698 0.08472621
         [,141]    [,142]     [,143]     [,144]    [,145]    [,146]     [,147]
[1,] 0.73094850 0.2432389 0.17479765 0.15387423 0.1337913 0.7497553 0.12094826
[2,] 0.06572333 0.5086306 0.08744283 0.74743584 0.0525115 0.1194938 0.09996631
[3,] 0.20332817 0.2481306 0.73775953 0.09868993 0.8136972 0.1307509 0.77908543
        [,148]    [,149]     [,150]    [,151]     [,152]    [,153]    [,154]
[1,] 0.2782031 0.1757971 0.15387423 0.2801123 0.78384576 0.2022402 0.6955352
[2,] 0.4409193 0.3756755 0.74743584 0.3341600 0.07261026 0.2802564 0.1013220
[3,] 0.2808776 0.4485274 0.09868993 0.3857278 0.14354399 0.5175034 0.2031427
        [,155]     [,156]    [,157]     [,158]     [,159]    [,160]     [,161]
[1,] 0.1792602 0.17479765 0.1716058 0.12094826 0.66685841 0.2022402 0.73094850
[2,] 0.1609833 0.08744283 0.1113652 0.09996631 0.24841538 0.2802564 0.06572333
[3,] 0.6597564 0.73775953 0.7170290 0.77908543 0.08472621 0.5175034 0.20332817
        [,162]    [,163]    [,164]     [,165]    [,166]    [,167]    [,168]
[1,] 0.2460076 0.7497553 0.2432389 0.12396900 0.7365631 0.1856250 0.2022402
[2,] 0.2317934 0.1194938 0.5086306 0.06510402 0.1753578 0.5275262 0.2802564
[3,] 0.5221990 0.1307509 0.2481306 0.81092698 0.0880791 0.2868488 0.5175034
        [,169]    [,170]    [,171]    [,172]    [,173]    [,174]    [,175]
[1,] 0.2432389 0.1792602 0.2801123 0.1988566 0.7956605 0.1337913 0.1856250
[2,] 0.5086306 0.1609833 0.3341600 0.6110928 0.1295506 0.0525115 0.5275262
[3,] 0.2481306 0.6597564 0.3857278 0.1900506 0.0747889 0.8136972 0.2868488
        [,176]    [,177]    [,178]    [,179]     [,180]    [,181]    [,182]
[1,] 0.7365631 0.7497553 0.2801123 0.2460076 0.10306410 0.1337913 0.1757971
[2,] 0.1753578 0.1194938 0.3341600 0.2317934 0.82774288 0.0525115 0.3756755
[3,] 0.0880791 0.1307509 0.3857278 0.5221990 0.06919302 0.8136972 0.4485274
         [,183]    [,184]    [,185]    [,186]     [,187]     [,188]     [,189]
[1,] 0.12094826 0.7584240 0.2460076 0.7584240 0.78384576 0.73094850 0.12094826
[2,] 0.09996631 0.0522488 0.2317934 0.0522488 0.07261026 0.06572333 0.09996631
[3,] 0.77908543 0.1893272 0.5221990 0.1893272 0.14354399 0.20332817 0.77908543
        [,190]    [,191]     [,192]     [,193]    [,194]     [,195]    [,196]
[1,] 0.1757971 0.1856250 0.10306410 0.73094850 0.1337913 0.12094826 0.1988566
[2,] 0.3756755 0.5275262 0.82774288 0.06572333 0.0525115 0.09996631 0.6110928
[3,] 0.4485274 0.2868488 0.06919302 0.20332817 0.8136972 0.77908543 0.1900506
        [,197]     [,198]    [,199]    [,200]
[1,] 0.2432389 0.15387423 0.1856250 0.1757971
[2,] 0.5086306 0.74743584 0.5275262 0.3756755
[3,] 0.2481306 0.09868993 0.2868488 0.4485274
> print(result$InfoXT)       # Mutual information between X and T
[1] 0.4208832
> print(result$MutualInfo)    # Mutual information between Y and T
[1] 0.02991036
> 
> 
> 
> cleanEx()
> nameEx("IBcont")
> ### * IBcont
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: IBcont
> ### Title: Cluster Continuous Data Using the Information Bottleneck
> ###   Algorithm
> ### Aliases: IBcont
> ### Keywords: clustering
> 
> ### ** Examples
> 
> # Generate simulated continuous data
> set.seed(123)
> X <- matrix(rnorm(200), ncol = 5)  # 200 observations, 5 features
> 
> # Run IBcont with automatic bandwidth selection and multiple initializations
> result <- IBcont(X = X, ncl = 3, beta = 50, s = -1, nstart = 10)
  |                                                                              |                                                                      |   0%  |                                                                              |=======                                                               |  10%  |                                                                              |==============                                                        |  20%  |                                                                              |=====================                                                 |  30%  |                                                                              |============================                                          |  40%  |                                                                              |===================================                                   |  50%  |                                                                              |==========================================                            |  60%  |                                                                              |=================================================                     |  70%  |                                                                              |========================================================              |  80%  |                                                                              |===============================================================       |  90%  |                                                                              |======================================================================| 100%
> 
> # Print clustering results
> print(result$Cluster)       # Cluster membership matrix
          [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
[1,] 0.3551825 0.3551835 0.3551837 0.3551795 0.3551817 0.3551831 0.3551826
[2,] 0.3300085 0.3300094 0.3300095 0.3300059 0.3300078 0.3300090 0.3300085
[3,] 0.3148089 0.3148071 0.3148067 0.3148146 0.3148106 0.3148078 0.3148089
          [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
[1,] 0.3551833 0.3551823 0.3551827 0.3551822 0.3551825 0.3551827 0.3551808
[2,] 0.3300091 0.3300083 0.3300087 0.3300082 0.3300085 0.3300086 0.3300070
[3,] 0.3148076 0.3148093 0.3148086 0.3148096 0.3148090 0.3148087 0.3148122
         [,15]     [,16]     [,17]     [,18]     [,19]     [,20]     [,21]
[1,] 0.3551839 0.3551818 0.3551840 0.3551823 0.3551818 0.3551831 0.3551828
[2,] 0.3300097 0.3300079 0.3300098 0.3300084 0.3300079 0.3300090 0.3300087
[3,] 0.3148064 0.3148104 0.3148062 0.3148093 0.3148104 0.3148078 0.3148085
         [,22]     [,23]     [,24]     [,25]     [,26]     [,27]     [,28]
[1,] 0.3551824 0.3551835 0.3551840 0.3551837 0.3551829 0.3551821 0.3551822
[2,] 0.3300084 0.3300094 0.3300098 0.3300095 0.3300089 0.3300081 0.3300083
[3,] 0.3148091 0.3148071 0.3148062 0.3148067 0.3148082 0.3148098 0.3148095
         [,29]     [,30]     [,31]     [,32]     [,33]     [,34]     [,35]
[1,] 0.3551813 0.3551821 0.3551825 0.3551838 0.3551818 0.3551836 0.3551835
[2,] 0.3300075 0.3300081 0.3300085 0.3300096 0.3300079 0.3300094 0.3300094
[3,] 0.3148112 0.3148098 0.3148090 0.3148066 0.3148104 0.3148070 0.3148071
         [,36]     [,37]     [,38]     [,39]     [,40]
[1,] 0.3551810 0.3551823 0.3551838 0.3551825 0.3551833
[2,] 0.3300072 0.3300083 0.3300096 0.3300085 0.3300092
[3,] 0.3148117 0.3148094 0.3148066 0.3148090 0.3148075
> print(result$InfoXT)       # Mutual information between X and T
[1] 1.086042e-11
> print(result$MutualInfo)    # Mutual information between Y and T
[1] 2.424727e-13
> 
> 
> 
> cleanEx()
> nameEx("IBmix")
> ### * IBmix
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: IBmix
> ### Title: Information Bottleneck Clustering for Mixed-Type Data
> ### Aliases: IBmix
> ### Keywords: clustering
> 
> ### ** Examples
> 
> # Example dataset with categorical, ordinal, and continuous variables
> set.seed(123)
> data <- data.frame(
+   cat_var = factor(sample(letters[1:3], 100, replace = TRUE)),      # Nominal categorical variable
+   ord_var = factor(sample(c("low", "medium", "high"), 100, replace = TRUE),
+                    levels = c("low", "medium", "high"),
+                    ordered = TRUE),                                # Ordinal variable
+   cont_var1 = rnorm(100),                                          # Continuous variable 1
+   cont_var2 = runif(100)                                           # Continuous variable 2
+ )
> 
> # Perform Mixed-Type Fuzzy Clustering
> result <- IBmix(X = data, ncl = 3, beta = 2, catcols = 1:2, contcols = 3:4, nstart = 10)
  |                                                                              |                                                                      |   0%  |                                                                              |=======                                                               |  10%  |                                                                              |==============                                                        |  20%  |                                                                              |=====================                                                 |  30%  |                                                                              |============================                                          |  40%  |                                                                              |===================================                                   |  50%  |                                                                              |==========================================                            |  60%  |                                                                              |=================================================                     |  70%  |                                                                              |========================================================              |  80%  |                                                                              |===============================================================       |  90%  |                                                                              |======================================================================| 100%
> 
> # Print clustering results
> print(result$Cluster)       # Cluster membership matrix
            [,1]         [,2]        [,3]         [,4]        [,5]         [,6]
[1,] 0.711628372 0.9727876964 0.216262914 7.440675e-01 0.979648922 0.0611440133
[2,] 0.279926110 0.0270344890 0.781700505 2.559295e-01 0.015436587 0.9386042976
[3,] 0.008445518 0.0001778146 0.002036581 2.968175e-06 0.004914491 0.0002516892
            [,7]        [,8]         [,9]      [,10]       [,11]        [,12]
[1,] 0.954042957 0.002678608 9.482810e-01 0.03700524 0.672579317 0.0383216580
[2,] 0.043069656 0.029752398 5.171667e-02 0.75129484 0.326318265 0.9614643338
[3,] 0.002887386 0.967568993 2.341047e-06 0.21169992 0.001102418 0.0002140082
            [,13]        [,14]       [,15]        [,16]       [,17]       [,18]
[1,] 0.0994953384 4.193605e-01 0.142809140 9.632722e-01 0.979614808 0.004011268
[2,] 0.9002537252 5.805829e-01 0.855359266 3.672678e-02 0.019294748 0.020423125
[3,] 0.0002509363 5.659355e-05 0.001831594 9.934343e-07 0.001090444 0.975565607
            [,19]      [,20]       [,21]      [,22]       [,23]        [,24]
[1,] 8.736797e-01 0.04023242 0.940055345 0.13654086 0.014154161 0.9664403781
[2,] 1.263050e-01 0.69573483 0.057145165 0.82695864 0.984837308 0.0333986050
[3,] 1.529973e-05 0.26403275 0.002799489 0.03650051 0.001008532 0.0001610169
            [,25]      [,26]        [,27]     [,28]       [,29]       [,30]
[1,] 9.676742e-01 0.16319442 0.6147338868 0.0308227 0.012410617 0.991538602
[2,] 3.226682e-02 0.75591253 0.3844025211 0.4892472 0.980775124 0.006971681
[3,] 5.902402e-05 0.08089304 0.0008635921 0.4799301 0.006814258 0.001489717
            [,31]        [,32]        [,33]       [,34]        [,35]
[1,] 0.4608249813 0.0579846566 1.281181e-03 0.013596018 0.9555360564
[2,] 0.5388895772 0.9415782511 5.053353e-07 0.980158010 0.0437705228
[3,] 0.0002854414 0.0004370923 9.987183e-01 0.006245973 0.0006934208
            [,36]       [,37]      [,38]       [,39]        [,40]        [,41]
[1,] 0.9896544262 0.136067442 0.04377262 0.863005500 0.7842693081 0.8973830916
[2,] 0.0098039511 0.861046296 0.84473770 0.135008943 0.2151519113 0.1018920596
[3,] 0.0005416227 0.002886262 0.11148968 0.001985557 0.0005787806 0.0007248488
            [,42]       [,43]        [,44]        [,45]       [,46]      [,47]
[1,] 0.9813105746 0.516833061 9.159959e-01 0.2386587416 0.502487482 0.01675415
[2,] 0.0185796018 0.009932386 8.396384e-02 0.7609920196 0.493744644 0.91185532
[3,] 0.0001098235 0.473234553 4.022919e-05 0.0003492388 0.003767874 0.07139053
           [,48]        [,49]        [,50]      [,51]        [,52]      [,53]
[1,] 0.896019222 0.5555042810 9.449665e-01 0.01389208 0.6829283909 0.05155040
[2,] 0.101416834 0.4436721497 5.502530e-02 0.33009714 0.3163659282 0.94737706
[3,] 0.002563943 0.0008235694 8.157071e-06 0.65601078 0.0007056809 0.00107254
           [,54]       [,55]      [,56]        [,57]      [,58]       [,59]
[1,] 0.940528345 0.611282800 0.03603139 0.9783625475 0.02939221 0.836923815
[2,] 0.059361940 0.386962188 0.50068400 0.0215052883 0.72683093 0.162885493
[3,] 0.000109715 0.001755013 0.46328462 0.0001321642 0.24377687 0.000190692
         [,60]        [,61]        [,62]        [,63]        [,64]       [,65]
[1,] 0.8498536 0.8426929386 0.9872270117 0.3630613820 0.0753949584 0.001331116
[2,] 0.1483844 0.1570205807 0.0126698317 0.6364036748 0.9242291834 0.023139856
[3,] 0.0017620 0.0002864807 0.0001031566 0.0005349432 0.0003758582 0.975529028
            [,66]        [,67]      [,68]        [,69]       [,70]      [,71]
[1,] 0.9920790754 0.0089872635 0.82596044 0.0142445810 0.004916198 0.78495453
[2,] 0.0076235800 0.9904736616 0.17385314 0.9850853531 0.015803914 0.11793729
[3,] 0.0002973446 0.0005390748 0.00018642 0.0006700659 0.979279888 0.09710819
           [,72]        [,73]       [,74]        [,75]       [,76]       [,77]
[1,] 0.040745836 0.9912644294 0.066515324 0.7741542526 0.031471397 0.363323679
[2,] 0.952647417 0.0084578805 0.928810495 0.2254631616 0.967081776 0.635594697
[3,] 0.006606746 0.0002776901 0.004674181 0.0003825857 0.001446826 0.001081624
          [,78]      [,79]        [,80]      [,81]       [,82]       [,83]
[1,] 0.94548440 0.04962867 0.9758087896 0.04472345 0.975092408 0.046270026
[2,] 0.01493327 0.93434228 0.0240449575 0.90760439 0.017227803 0.950580962
[3,] 0.03958234 0.01602904 0.0001462529 0.04767216 0.007679789 0.003149011
           [,84]       [,85]       [,86]       [,87]        [,88]        [,89]
[1,] 0.011044450 0.986282398 0.026632155 0.046776861 6.446398e-01 7.402879e-01
[2,] 0.987488366 0.003681923 0.967873048 0.951473623 3.552761e-01 2.596738e-01
[3,] 0.001467184 0.010035679 0.005494797 0.001749515 8.413653e-05 3.833448e-05
            [,90]      [,91]      [,92]      [,93]       [,94]      [,95]
[1,] 9.334359e-01 0.40298672 0.01133621 0.49657117 0.259306726 0.15916736
[2,] 6.650316e-02 0.55089791 0.35207887 0.46667335 0.737713033 0.82581203
[3,] 6.096467e-05 0.04611537 0.63658492 0.03675548 0.002980241 0.01502061
            [,96]       [,97]        [,98]        [,99]      [,100]
[1,] 0.2958372194 0.390075580 0.9923884729 9.651589e-01 0.001250998
[2,] 0.7033108517 0.609159561 0.0070902357 3.483664e-02 0.029239936
[3,] 0.0008519289 0.000764859 0.0005212913 4.423660e-06 0.969509066
> print(result$InfoXT)       # Mutual information between X and T
[1] 0.8411178
> print(result$MutualInfo)    # Mutual information between Y and T
[1] 0.5291988
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  18.83 0.45 20.46 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
